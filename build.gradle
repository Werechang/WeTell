plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.4'
}

group 'com.gebb'
version '1.0'

java {
    modularity.inferModulePath = true
}
modularity.disableEffectiveArgumentsAdjustment()

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.gebb.wetell'
    mainClass = 'com.gebb.wetell.client.WeTellClient'
}

javafx {
    version = '15.0.1'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    targetPlatform("lin") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_linux_hotspot_15.0.2_7.tar.gz") {
            downloadDir = "$buildDir/jdkLin"
            archiveName = "lin-jdk"
            archiveExtension = "tar.gz"
            pathToHome = "jdk-15.0.2+7"
            overwrite = false
        }
    }
    targetPlatform("mac") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_mac_hotspot_15.0.2_7.tar.gz") {
            downloadDir = "$buildDir/jdkMac"
            archiveName = "mac-jdk"
            archiveExtension = "tar.gz"
            pathToHome = "jdk-15.0.2+7/Contents/Home"
            overwrite = false
        }
    }
    targetPlatform("win") {
        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.2%2B7/OpenJDK15U-jdk_x64_windows_hotspot_15.0.2_7.zip") {
            downloadDir = "$buildDir/jdkWin"
            archiveName = "win-jdk"
            archiveExtension = "zip"
            pathToHome = "jdk-15.0.2+7"
            overwrite = false
        }
    }

    launcher {
        noConsole = true
    }
    jpackage {
        targetPlatformName = "win"

        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        if (currentOs.windows) {
            targetPlatformName = "win"
        } else if (currentOs.macOsX) {
            targetPlatformName = "mac"
        } else if (currentOs.linux) {
            targetPlatformName = "lin"
        } else {
            targetPlatformName = null
        }
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/com/gebb/wetell/client/gui/icons/wetell.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources/com/gebb/wetell/client/gui"]
        installerOptions += ['--vendor', 'GEBB']

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
        else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'wetell','--linux-shortcut']
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'wetell']
        }
    }
}

dependencies {

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
}

test {
    useJUnitPlatform()
}